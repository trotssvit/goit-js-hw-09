{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACHN,EACAI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAExBA,E,IAlCEQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAcC,GACVA,EAAEC,iBAKF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,OAAOC,SAAShB,MAAMiB,OACvCC,EAAOJ,OAAOH,EAAEI,OAAOC,SAASE,KAAKD,OACrCE,EAASL,OAAOH,EAAEI,OAAOC,SAASG,OAAOF,OAEpCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACnDtB,EAAcsB,EAAUP,GACnBQ,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACfuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OACpE2B,QAAMC,IAAI,uBAAwCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,GAC3Da,GACFgB,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAChBuB,EAAA3B,GAAS4B,OAAOM,QAAQ,sBAAuCJ,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OACnE2B,QAAMC,IAAI,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,GACxDa,GACPA,GAASK,EAEbP,EAAEI,OAAOgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form')\nform.addEventListener('submit', test)\n\nfunction test(e) {\n    e.preventDefault();\n    let delay = Number(e.target.elements.delay.value);\n    let step = Number(e.target.elements.step.value);\n    let amount = Number(e.target.elements.amount.value);\n\n    for (let position = 1; position <= amount; position += 1) {\n        createPromise(position, delay)\n            .then(({ position, delay }) => {\n                Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n                console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            }, delay)\n            .catch(({ position, delay }) => {\n                Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n                console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n            }, delay);\n        delay += step;\n    };\n    e.target.reset();\n};\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay })\n            } else {\n                reject({ position, delay })\n            };\n        }, delay);\n    });\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","elements","value","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","reset"],"version":3,"file":"03-promises.cd558e1a.js.map"}